---
- name: Verify {{ appliance_user }} user exists
  postgresql_user:
    role_attr_flags: SUPERUSER
    name: "{{ powerdns_db_user }}"
    encrypted: yes
    password: "{{ __powerdns_db_password}}"
    state: present
  register: user_exists
  notify: Restart PowerDNS
  become_user: postgres
  become: yes

- name: Verify {{ powerdns_db_name }} database exists
  postgresql_db:
    name: "{{ powerdns_db_name}}"
    owner: "{{ powerdns_db_user }}"
    template: template1
    state: present
  register: db_exists
  become_user: postgres
  become: yes

- name: Create {{ powerdns_db_name }} database
  postgresql_db:
    name: "{{ powerdns_db_name}}"
    state: restore
    target: "{{ role_path }}/files/pgsql-{{ powerdns_version }}.sql"
    owner: "{{ powerdns_db_user }}"
    login_password: "{{ __powerdns_db_password }}"
    login_user: "{{powerdns_db_user}}"
    login_host: 127.0.0.1
  when: db_exists.changed
  notify: Restart PowerDNS

- name: Verify {{powerdns_db_user}} grants
  postgresql_privs:
    db: template1
    privs: ALL
    obj: "{{ powerdns_db_name }}"
    role: "{{ powerdns_db_user }}"
    type: database
    state: present
  become_user: postgres
  become: yes
