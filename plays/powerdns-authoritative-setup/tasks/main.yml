# Addin play
# vim:et ts=2 sw=2 sts=2 syntax=yaml filetype=yaml
# Configure PowerDNS
---
- assert:
    that: powerdns_driver in ['mysql','pgsql']
    fail_msg: "Unknown driver {{ powerdns_driver }}"
- assert:
    that: powerdns_version is version('4.1', '>=') or not powerdns_enable_recursion
    fail_msg: "PowerDNS recursion requires PowerDNS 4.1+ - {{ powerdns_version }} requested"
- set_fact:
    __powerdns_db_password: "{{ powerdns_db_password }}"
    __powerdns_api_key: "{{ powerdns_api_key }}"

- name: Setup PowerDNS
  include_tasks: setup-powerdns.yml
  when:
    - powerdns_enabled | bool

- name: "{{ powerdns_enabled | ternary('Enable', 'Disable') }} firewall ports"
  include_role: name=network/setup-firewall tasks_from=add-firewall.yml
  vars:
    immediate: yes
    service: "{{ item.service | default(None) }}"
    port: "{{ item.port | default(None) }}"
    state: "{{ powerdns_enabled | ternary('enabled', 'disabled') }}"
    permanent: yes
  with_items:
    - service: dns

- name: Remove PowerDNS RPMs
  yum:
    name: "{{ powerdns_packages }}"
    state: absent
    lock_timeout: 300
  when: not powerdns_enabled | bool

- name: Extract pdns configuration from auth.yml
  include_vars:
    name: __authcfg
    file: "{{ apnscp_root }}/config/auth.yaml"

- name: Combine pdns configuration
  set_fact:
    __powerdns_skeleton: "{{ powerdns_skeleton | combine(__authcfg | default({}), recursive=True) }}"

- name: Update auth.yaml configuration
  copy:
    content: "{{ __powerdns_skeleton | to_nice_yaml(indent=2) }}"
    dest: "{{ apnscp_root }}/config/auth.yaml"
  notify: Restart apnscp

- name: Install provider module
  include_role: name=common/addin tasks_from="{{ powerdns_enabled | ternary('install', 'remove') }}-library.yml"
  vars:
    name: "{{ addin_provider_name }}"
    type: "dns"
    method: "{{ addin_integration_type }}"
    hook: Restart apnscp
    module_path: "src/"
