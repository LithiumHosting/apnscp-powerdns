---
# PowerDNS API listens for local requests only
# This can be put behind an Apache proxy or other means
# See documentation for examples
powerdns_localonly: true
# Toggle installation of PowerDNS
powerdns_enabled: true
# Use only the module API, PowerDNS is remotely hosted
# powerdns_enabled must be true as well
powerdns_apionly: false
powerdns_version: 4.3
powerdns_repo_uri: "https://repo.powerdns.com/repo-files/centos-rec-{{ powerdns_version | regex_replace('\\.','') }}.repo"
powerdns_repo_config: /etc/yum.repos.d/powerdns.repo
powerdns_packages:
  - pdns
  - "pdns-backend-{{ (powerdns_driver == 'pgsql') | ternary('postgresql', powerdns_driver) }}"

powerdns_local_dir: "/etc/pdns/local.d"
powerdns_config_file: /etc/pdns/pdns.conf
# PowerDNS database backend, mysql or pgsql
powerdns_driver: mysql
# Available PowerDNS drivers
powerdns_available_drivers:
  - mysql
  - pgsql
# Duration for Packet Cache
# @XXX To avoid false positives, all participating nodes MUST have
# pdns.deadline set to this value in auth.yml
powerdns_packet_cache_ttl: 20

# required for ALIAS flattening
powerdns_enable_recursion: false
powerdns_recursive_ns: "{{ dns_robust_nameservers }}"
powerdns_api_port: 8081

# Code installation
addin_provider_name: Powerdns
addin_integration_type: "{{ (apnscp_debug | bool) | ternary('link', 'copy') }}"

powerdns_db_password: >-
  {{ lookup('pipe', 'grep -e "^\s*g' + powerdns_driver + '-password\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default(lookup('password', '/dev/null chars=ascii_letters length=24'), true) | trim }}
powerdns_db_user: >-
  {{ lookup('pipe', 'grep -e "^\s*g' + powerdns_driver + '-user\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default('powerdns', true) | trim }}
powerdns_db_name: >-
  {{ lookup('pipe', 'grep -e "^\s*g' + powerdns_driver + '-dbname\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default('powerdns', true) | trim }}
powerdns_db_host: >-
  {{ lookup('pipe', 'grep -e "^\s*g' + powerdns_driver + '-host\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default('localhost', true) | trim }}
powerdns_api_key: >-
  {{ lookup('pipe', 'grep -e "^\s*api-key\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default(lookup('password', '/dev/null chars=ascii_letters length=24'), true) | trim }}
# Default configuration in auth.yml if not set
powerdns_skeleton:
  pdns:
    uri: "http://localhost:{{ powerdns_api_port }}/api/v1"
    key: "{{ __powerdns_api_key }}"
    ns:
      - 127.0.0.1
    deadline: "{{ powerdns_packet_cache_ttl }}"
    recursion: "{{ powerdns_enable_recursion }}"
    soa: null
powerdns_webserver_enable: "{{ powerdns_version is version('4.1', '>=') | ternary('no', 'yes') }}"
powerdns_api_listen: "{{ powerdns_localonly | ternary('127.0.0.1', '0.0.0.0') }}"
powerdns_api_whitelist: "{{ powerdns_localonly | ternary('127.0.0.1,::1', '0.0.0.0,::/0') }}"

powerdns_config:
  api: yes
  "api-key": "{{ __powerdns_api_key }}"
  # PacketCache will cause false positives in record_exists()
  "cache-ttl": "{{ powerdns_packet_cache_ttl | int }}"
  "include-dir": "{{ powerdns_local_dir }}"
  webserver: "{{ powerdns_webserver_enable }}"
  "webserver-address": "{{  powerdns_api_listen }}"
  "webserver-allow-from": "{{ powerdns_api_whitelist}}"
  "webserver-port": "{{ powerdns_api_port }}"
  launch: "g{{ powerdns_driver }}"
  version-string: anonymous
  expand-alias: "{{ powerdns_enable_recursion | ternary('yes', 'no') }}"
  resolver: "{{ powerdns_enable_recursion | ternary(powerdns_recursive_ns | map('regex_replace', '^([^:]+)$', '\\1:53') | list | join(','), 'no') }}"

# Variety of issues with template keys and unsafe text from lookups. Break this into a separate setting
# to compose the key as g<driver>-<key>
powerdns_driver_config:
  "password": "{{ __powerdns_db_password }}"
  "user": "{{ powerdns_db_user }}"
  "dbname": "{{ powerdns_db_name }}"
  "host": "{{ powerdns_db_host }}"

# Inject overrides via powerdns_custom_config
# powerdns_custom_config:
#   "allow-axfr-ips": 1.2.3.4
#   "also-notify": 2.3.4.5
