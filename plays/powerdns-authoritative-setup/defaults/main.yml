---
# PowerDNS API listens for local requests only
# This can be put behind an Apache proxy or other means
# See documentation for examples
powerdns_localonly: true

# Toggle installation of PowerDNS
powerdns_enabled: false

powerdns_version: 4.8
powerdns_repo_uri: "https://repo.powerdns.com/repo-files/centos-rec-{{ powerdns_version | regex_replace('\\.','') }}.repo"
powerdns_repo_config: /etc/yum.repos.d/powerdns.repo
powerdns_packages:
  - pdns
  - "pdns-backend-{{ (powerdns_driver == 'pgsql') | ternary('postgresql', powerdns_driver) }}"
# IP address for DNS resolver to listen. On 4.3 this is both IPv6 + IPv4. Prior only IPv4 is accepted
# With CentOS 8+ 127.0.0.53 is excluded and all other IPs listed
powerdns_dns_bind_address: >-
  {%- if ansible_distribution_major_version != '7' -%}
    {{ powerdns_version is version ('4.3', '>=') | ternary((([ansible_default_ipv4.address | default(None)]) + [ansible_default_ipv6.address | default(None)] + ['127.0.0.1']) | reject('sameas', None) | reject('search', '127.0.0.53') | join(','), '0.0.0.0') }}
  {%- else -%}
    {{ powerdns_version is version ('4.3', '>=') | ternary('0.0.0.0, ::', '0.0.0.0') }}
  {%- endif -%}
# Default PowerDNS zone type, can be type "native" for database clustering or "master", "slave" for AXFR types
# AXFR/NOTIFY cannot remove zones
powerdns_zone_type: "{{ (lookup('file', apnscp_root + '/config/auth.yaml' ) | from_yaml)['pdns']['type'] | default('native') }}"
powerdns_local_dir: "/etc/pdns/local.d"
powerdns_config_file: /etc/pdns/pdns.conf
powerdns_owner: pdns
# PowerDNS database backend, mysql or pgsql
powerdns_driver: mysql
# Available PowerDNS drivers
powerdns_available_drivers:
  - mysql
  - pgsql
# Duration for Packet Cache
# @XXX To avoid false positives, all participating nodes MUST have
# pdns.deadline set to this value in auth.yml
powerdns_packet_cache_ttl: 20
# required for ALIAS flattening
powerdns_enable_recursion: false
powerdns_recursive_ns: "{{ dns_robust_nameservers }}"
powerdns_api_port: 8081
# Change to match your public nameservers
powerdns_nameservers:
  - 127.0.0.1
# API URI endpoint, defaults to local
powerdns_api_uri: "http://localhost:{{ powerdns_api_port }}/api/v1"
powerdns_db_password: >-
  {{ lookup('pipe', 'grep -se "^\s*g' + powerdns_driver + '-password\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default(lookup('password', '/dev/null chars=ascii_letters length=24'), true) | trim }}
powerdns_db_user: >-
  {{ lookup('pipe', 'grep -e "^\s*g' + powerdns_driver + '-user\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default('powerdns', true) | trim }}
powerdns_db_name: >-
  {{ lookup('pipe', 'grep -e "^\s*g' + powerdns_driver + '-dbname\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default('powerdns', true) | trim }}
powerdns_db_host: >-
  {{ lookup('pipe', 'grep -e "^\s*g' + powerdns_driver + '-host\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default('localhost', true) | trim }}
powerdns_api_key: >-
  {{ lookup('pipe', 'grep -se "^\s*api-key\s*=" ' + (powerdns_config_file | quote) + ' | cut -d= -f2') | default(lookup('password', '/dev/null chars=ascii_letters length=24'), true) | trim }}
# Default configuration in auth.yml if not set
powerdns_skeleton:
  pdns:
    type: "{{ powerdns_zone_type }}"
    uri: "{{ powerdns_api_uri }}"
    key: "{{ __powerdns_api_key }}"
    ns: "{{ powerdns_nameservers }}"
    deadline: "{{ powerdns_packet_cache_ttl }}"
    recursion: "{{ powerdns_enable_recursion }}"
    soa: "{{ powerdns_zone_soa | default(None)}}"
powerdns_webserver_enable: "{{ powerdns_version is version('4.1', '>=') | ternary('no', 'yes') }}"
# Enable API usage
powerdns_api_enable: "{{ powerdns_zone_type in ['master','primary','native'] }}"
powerdns_api_listen: "{{ powerdns_localonly | ternary('127.0.0.1', '0.0.0.0') }}"
powerdns_api_whitelist: "{{ powerdns_localonly | ternary('127.0.0.1,::1', '0.0.0.0,::/0') }}"
# INTERNAL Overide with powerdns_custom_config map
powerdns_config:
  api: "{{ powerdns_api_enable | ternary('yes', 'no') }}"
  "api-key": "{{ __powerdns_api_key }}"
  # PacketCache will cause false positives in record_exists()
  "cache-ttl": "{{ powerdns_packet_cache_ttl | int }}"
  "query-cache-ttl": "{{ powerdns_packet_cache_ttl | int }}"
  "include-dir": "{{ powerdns_local_dir }}"
  webserver: "{{ powerdns_webserver_enable | bool | ternary('yes', 'no') }}"
  "webserver-address": "{{  powerdns_api_listen }}"
  "webserver-allow-from": "{{ powerdns_api_whitelist}}"
  "webserver-port": "{{ powerdns_api_port }}"
  launch: "g{{ powerdns_driver }}"
  local-address: "{{ powerdns_dns_bind_address }}"
  version-string: anonymous
  expand-alias: "{{ powerdns_enable_recursion | ternary('yes', 'no') }}"
  resolver: "{{ powerdns_enable_recursion | ternary(powerdns_recursive_ns | map('regex_replace', '^([^:]+)$', '\\1:53') | list | join(','), 'no') }}"

# Apply firewalld rules based on powerdns_enabled state
powerdns_managed_firewall: true

# Set ip + name fields to configure a supermaster automatically.
# Setting a supermaster requires powerdns_zone_type as "slave"
powerdns_supermaster:
  ip: null
  nameserver: null
  account: master
# Variety of issues with template keys and unsafe text from lookups. Break this into a separate setting
# to compose the key as g<driver>-<key>
powerdns_driver_config:
  "password": "{{ __powerdns_db_password }}"
  "user": "{{ powerdns_db_user }}"
  "dbname": "{{ powerdns_db_name }}"
  "host": "{{ powerdns_db_host }}"

# Inject overrides via powerdns_custom_config
# powerdns_custom_config:
#   "allow-axfr-ips": 1.2.3.4
#   "also-notify": 2.3.4.5

# INTERNAL Code installation
addin_provider_name: Powerdns
# INTERNAL Code installation
addin_integration_type: "{{ (apnscp_debug | bool) | ternary('link', 'copy') }}"
# INTERNAL RPM schema location
powerdns_rpm_schema: "/usr/share/doc/pdns-backend-{{ (powerdns_driver == 'pgsql') | ternary('postgresql', powerdns_driver) }}/schema.{{ (powerdns_driver == 'pgsql') | ternary('postgresql', powerdns_driver) }}.sql"
